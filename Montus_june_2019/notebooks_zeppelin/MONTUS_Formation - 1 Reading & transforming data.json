{"paragraphs":[{"text":"%md\nThis notebook aims to discover how to use Spark Scala in Zeppelin to get and transform data \n\nWe will discover below :\n\n- How to read data (with different formats : json, csv, txt, parquet, xlsx) from different databases (such as : HDFS, MongoDB)\n- How to transform data (between differents types of data in Spark)\n\n# Read data \n\nIn Spark Scala, we are able to read and save different formats (such as : json, txt, csv, etc.) in HDFS.\n\nIn Hupi, beside HDFS, we use others databases, such as : MongoDB, ElasticSearch. For some clients, we also read data from MySQL, PostgreSQL, etc. \n\nTo read and save data in these databases (other than HDFS), we just need to download the dependencies corresponding in `https://mvnrepository.com/`\n\nBelow, we will put examples of how to read data (csv, txt, json) from HDFS and MongoDB.\n\n***Reference links*** :\n\nhttps://spark.apache.org/docs/latest/sql-data-sources-load-save-functions.html\n\n### Read csv in HDFS","user":"anonymous","dateUpdated":"2019-06-13T10:37:24+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>This notebook aims to discover how to use Spark Scala in Zeppelin to get and transform data </p>\n<p>We will discover below :</p>\n<ul>\n  <li>How to read data (with different formats : json, csv, txt, parquet, xlsx) from different databases (such as : HDFS, MongoDB)</li>\n  <li>How to transform data (between differents types of data in Spark)</li>\n</ul>\n<h1>Read data</h1>\n<p>In Spark Scala, we are able to read and save different formats (such as : json, txt, csv, etc.) in HDFS.</p>\n<p>In Hupi, beside HDFS, we use others databases, such as : MongoDB, ElasticSearch. For some clients, we also read data from MySQL, PostgreSQL, etc. </p>\n<p>To read and save data in these databases (other than HDFS), we just need to download the dependencies corresponding in <code>https://mvnrepository.com/</code></p>\n<p>Below, we will put examples of how to read data (csv, txt, json) from HDFS and MongoDB.</p>\n<p><strong><em>Reference links</em></strong> :</p>\n<p><a href=\"https://spark.apache.org/docs/latest/sql-data-sources-load-save-functions.html\">https://spark.apache.org/docs/latest/sql-data-sources-load-save-functions.html</a></p>\n<h3>Read csv in HDFS</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196577_1539731851","id":"20190610-090014_1338988644","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T10:37:24+0000","dateFinished":"2019-06-13T10:37:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:282"},{"text":"// to read csv from HDFS\n// HDFS of factory02 : hupi-factory-02-01-01.factory02.viet.cloud-torus.com \nval data_csv = spark.read.format(\"csv\").option(\"header\", \"true\").load(\"hdfs://hupi-factory-02-01-01.factory02.viet.cloud-torus.com:8020/user/factory02/formation_hupi/adult.csv\")","user":"anonymous","dateUpdated":"2019-06-13T12:49:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"data_csv: org.apache.spark.sql.DataFrame = [age: string, workclass: string ... 13 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=0"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196581_1719307190","id":"20190610-123832_304056497","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:49:25+0000","dateFinished":"2019-06-13T12:49:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:283"},{"text":"%md\nWhen we read csv file in Spark, we will have a DataFrame.","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>When we read csv file in Spark, we will have a DataFrame.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196581_1341357852","id":"20190610-132048_280383413","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:284"},{"text":"// Schema of data_csv\ndata_csv.printSchema()","user":"anonymous","dateUpdated":"2019-06-13T12:49:31+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- age: string (nullable = true)\n |-- workclass: string (nullable = true)\n |-- fnlwgt: string (nullable = true)\n |-- education: string (nullable = true)\n |-- education_num: string (nullable = true)\n |-- martial_status: string (nullable = true)\n |-- occupation: string (nullable = true)\n |-- relationship: string (nullable = true)\n |-- race: string (nullable = true)\n |-- sex: string (nullable = true)\n |-- capital_gain: string (nullable = true)\n |-- capital_loss: string (nullable = true)\n |-- hours_per_week: string (nullable = true)\n |-- native_country: string (nullable = true)\n |-- salary: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1560422196581_1189151826","id":"20190610-131608_711829848","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:49:31+0000","dateFinished":"2019-06-13T12:49:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:285"},{"text":"// We can see what's in data_csv\nz.show(data_csv)","user":"anonymous","dateUpdated":"2019-06-13T12:46:43+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","workclass":"string","fnlwgt":"string","education":"string","education_num":"string","martial_status":"string","occupation":"string","relationship":"string","race":"string","sex":"string","capital_gain":"string","capital_loss":"string","hours_per_week":"string","native_country":"string","salary":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tworkclass\tfnlwgt\teducation\teducation_num\tmartial_status\toccupation\trelationship\trace\tsex\tcapital_gain\tcapital_loss\thours_per_week\tnative_country\tsalary\n39\t State-gov\t 77516\t Bachelors\t 13\t Never-married\t Adm-clerical\t Not-in-family\t White\t Male\t 2174\t 0\t 40\t United-States\t <=50K\n50\t Self-emp-not-inc\t 83311\t Bachelors\t 13\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 13\t United-States\t <=50K\n38\t Private\t 215646\t HS-grad\t 9\t Divorced\t Handlers-cleaners\t Not-in-family\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n53\t Private\t 234721\t 11th\t 7\t Married-civ-spouse\t Handlers-cleaners\t Husband\t Black\t Male\t 0\t 0\t 40\t United-States\t <=50K\n28\t Private\t 338409\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Wife\t Black\t Female\t 0\t 0\t 40\t Cuba\t <=50K\n37\t Private\t 284582\t Masters\t 14\t Married-civ-spouse\t Exec-managerial\t Wife\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n49\t Private\t 160187\t 9th\t 5\t Married-spouse-absent\t Other-service\t Not-in-family\t Black\t Female\t 0\t 0\t 16\t Jamaica\t <=50K\n52\t Self-emp-not-inc\t 209642\t HS-grad\t 9\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 45\t United-States\t >50K\n31\t Private\t 45781\t Masters\t 14\t Never-married\t Prof-specialty\t Not-in-family\t White\t Female\t 14084\t 0\t 50\t United-States\t >50K\n42\t Private\t 159449\t Bachelors\t 13\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 5178\t 0\t 40\t United-States\t >50K\n37\t Private\t 280464\t Some-college\t 10\t Married-civ-spouse\t Exec-managerial\t Husband\t Black\t Male\t 0\t 0\t 80\t United-States\t >50K\n30\t State-gov\t 141297\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t Asian-Pac-Islander\t Male\t 0\t 0\t 40\t India\t >50K\n23\t Private\t 122272\t Bachelors\t 13\t Never-married\t Adm-clerical\t Own-child\t White\t Female\t 0\t 0\t 30\t United-States\t <=50K\n32\t Private\t 205019\t Assoc-acdm\t 12\t Never-married\t Sales\t Not-in-family\t Black\t Male\t 0\t 0\t 50\t United-States\t <=50K\n40\t Private\t 121772\t Assoc-voc\t 11\t Married-civ-spouse\t Craft-repair\t Husband\t Asian-Pac-Islander\t Male\t 0\t 0\t 40\t ?\t >50K\n34\t Private\t 245487\t 7th-8th\t 4\t Married-civ-spouse\t Transport-moving\t Husband\t Amer-Indian-Eskimo\t Male\t 0\t 0\t 45\t Mexico\t <=50K\n25\t Self-emp-not-inc\t 176756\t HS-grad\t 9\t Never-married\t Farming-fishing\t Own-child\t White\t Male\t 0\t 0\t 35\t United-States\t <=50K\n32\t Private\t 186824\t HS-grad\t 9\t Never-married\t Machine-op-inspct\t Unmarried\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n38\t Private\t 28887\t 11th\t 7\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t <=50K\n43\t Self-emp-not-inc\t 292175\t Masters\t 14\t Divorced\t Exec-managerial\t Unmarried\t White\t Female\t 0\t 0\t 45\t United-States\t >50K\n40\t Private\t 193524\t Doctorate\t 16\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 60\t United-States\t >50K\n54\t Private\t 302146\t HS-grad\t 9\t Separated\t Other-service\t Unmarried\t Black\t Female\t 0\t 0\t 20\t United-States\t <=50K\n35\t Federal-gov\t 76845\t 9th\t 5\t Married-civ-spouse\t Farming-fishing\t Husband\t Black\t Male\t 0\t 0\t 40\t United-States\t <=50K\n43\t Private\t 117037\t 11th\t 7\t Married-civ-spouse\t Transport-moving\t Husband\t White\t Male\t 0\t 2042\t 40\t United-States\t <=50K\n59\t Private\t 109015\t HS-grad\t 9\t Divorced\t Tech-support\t Unmarried\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n56\t Local-gov\t 216851\t Bachelors\t 13\t Married-civ-spouse\t Tech-support\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n19\t Private\t 168294\t HS-grad\t 9\t Never-married\t Craft-repair\t Own-child\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n54\t ?\t 180211\t Some-college\t 10\t Married-civ-spouse\t ?\t Husband\t Asian-Pac-Islander\t Male\t 0\t 0\t 60\t South\t >50K\n39\t Private\t 367260\t HS-grad\t 9\t Divorced\t Exec-managerial\t Not-in-family\t White\t Male\t 0\t 0\t 80\t United-States\t <=50K\n49\t Private\t 193366\t HS-grad\t 9\t Married-civ-spouse\t Craft-repair\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n23\t Local-gov\t 190709\t Assoc-acdm\t 12\t Never-married\t Protective-serv\t Not-in-family\t White\t Male\t 0\t 0\t 52\t United-States\t <=50K\n20\t Private\t 266015\t Some-college\t 10\t Never-married\t Sales\t Own-child\t Black\t Male\t 0\t 0\t 44\t United-States\t <=50K\n45\t Private\t 386940\t Bachelors\t 13\t Divorced\t Exec-managerial\t Own-child\t White\t Male\t 0\t 1408\t 40\t United-States\t <=50K\n30\t Federal-gov\t 59951\t Some-college\t 10\t Married-civ-spouse\t Adm-clerical\t Own-child\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n22\t State-gov\t 311512\t Some-college\t 10\t Married-civ-spouse\t Other-service\t Husband\t Black\t Male\t 0\t 0\t 15\t United-States\t <=50K\n48\t Private\t 242406\t 11th\t 7\t Never-married\t Machine-op-inspct\t Unmarried\t White\t Male\t 0\t 0\t 40\t Puerto-Rico\t <=50K\n21\t Private\t 197200\t Some-college\t 10\t Never-married\t Machine-op-inspct\t Own-child\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n19\t Private\t 544091\t HS-grad\t 9\t Married-AF-spouse\t Adm-clerical\t Wife\t White\t Female\t 0\t 0\t 25\t United-States\t <=50K\n31\t Private\t 84154\t Some-college\t 10\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 38\t ?\t >50K\n48\t Self-emp-not-inc\t 265477\t Assoc-acdm\t 12\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n31\t Private\t 507875\t 9th\t 5\t Married-civ-spouse\t Machine-op-inspct\t Husband\t White\t Male\t 0\t 0\t 43\t United-States\t <=50K\n53\t Self-emp-not-inc\t 88506\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n24\t Private\t 172987\t Bachelors\t 13\t Married-civ-spouse\t Tech-support\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t <=50K\n49\t Private\t 94638\t HS-grad\t 9\t Separated\t Adm-clerical\t Unmarried\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n25\t Private\t 289980\t HS-grad\t 9\t Never-married\t Handlers-cleaners\t Not-in-family\t White\t Male\t 0\t 0\t 35\t United-States\t <=50K\n57\t Federal-gov\t 337895\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t Black\t Male\t 0\t 0\t 40\t United-States\t >50K\n53\t Private\t 144361\t HS-grad\t 9\t Married-civ-spouse\t Machine-op-inspct\t Husband\t White\t Male\t 0\t 0\t 38\t United-States\t <=50K\n44\t Private\t 128354\t Masters\t 14\t Divorced\t Exec-managerial\t Unmarried\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n41\t State-gov\t 101603\t Assoc-voc\t 11\t Married-civ-spouse\t Craft-repair\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n29\t Private\t 271466\t Assoc-voc\t 11\t Never-married\t Prof-specialty\t Not-in-family\t White\t Male\t 0\t 0\t 43\t United-States\t <=50K\n25\t Private\t 32275\t Some-college\t 10\t Married-civ-spouse\t Exec-managerial\t Wife\t Other\t Female\t 0\t 0\t 40\t United-States\t <=50K\n18\t Private\t 226956\t HS-grad\t 9\t Never-married\t Other-service\t Own-child\t White\t Female\t 0\t 0\t 30\t ?\t <=50K\n47\t Private\t 51835\t Prof-school\t 15\t Married-civ-spouse\t Prof-specialty\t Wife\t White\t Female\t 0\t 1902\t 60\t Honduras\t >50K\n50\t Federal-gov\t 251585\t Bachelors\t 13\t Divorced\t Exec-managerial\t Not-in-family\t White\t Male\t 0\t 0\t 55\t United-States\t >50K\n47\t Self-emp-inc\t 109832\t HS-grad\t 9\t Divorced\t Exec-managerial\t Not-in-family\t White\t Male\t 0\t 0\t 60\t United-States\t <=50K\n43\t Private\t 237993\t Some-college\t 10\t Married-civ-spouse\t Tech-support\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n46\t Private\t 216666\t 5th-6th\t 3\t Married-civ-spouse\t Machine-op-inspct\t Husband\t White\t Male\t 0\t 0\t 40\t Mexico\t <=50K\n35\t Private\t 56352\t Assoc-voc\t 11\t Married-civ-spouse\t Other-service\t Husband\t White\t Male\t 0\t 0\t 40\t Puerto-Rico\t <=50K\n41\t Private\t 147372\t HS-grad\t 9\t Married-civ-spouse\t Adm-clerical\t Husband\t White\t Male\t 0\t 0\t 48\t United-States\t <=50K\n30\t Private\t 188146\t HS-grad\t 9\t Married-civ-spouse\t Machine-op-inspct\t Husband\t White\t Male\t 5013\t 0\t 40\t United-States\t <=50K\n30\t Private\t 59496\t Bachelors\t 13\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 2407\t 0\t 40\t United-States\t <=50K\n32\t ?\t 293936\t 7th-8th\t 4\t Married-spouse-absent\t ?\t Not-in-family\t White\t Male\t 0\t 0\t 40\t ?\t <=50K\n48\t Private\t 149640\t HS-grad\t 9\t Married-civ-spouse\t Transport-moving\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n42\t Private\t 116632\t Doctorate\t 16\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 45\t United-States\t >50K\n29\t Private\t 105598\t Some-college\t 10\t Divorced\t Tech-support\t Not-in-family\t White\t Male\t 0\t 0\t 58\t United-States\t <=50K\n36\t Private\t 155537\t HS-grad\t 9\t Married-civ-spouse\t Craft-repair\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n28\t Private\t 183175\t Some-college\t 10\t Divorced\t Adm-clerical\t Not-in-family\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n53\t Private\t 169846\t HS-grad\t 9\t Married-civ-spouse\t Adm-clerical\t Wife\t White\t Female\t 0\t 0\t 40\t United-States\t >50K\n49\t Self-emp-inc\t 191681\t Some-college\t 10\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t >50K\n25\t ?\t 200681\t Some-college\t 10\t Never-married\t ?\t Own-child\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n19\t Private\t 101509\t Some-college\t 10\t Never-married\t Prof-specialty\t Own-child\t White\t Male\t 0\t 0\t 32\t United-States\t <=50K\n31\t Private\t 309974\t Bachelors\t 13\t Separated\t Sales\t Own-child\t Black\t Female\t 0\t 0\t 40\t United-States\t <=50K\n29\t Self-emp-not-inc\t 162298\t Bachelors\t 13\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 70\t United-States\t >50K\n23\t Private\t 211678\t Some-college\t 10\t Never-married\t Machine-op-inspct\t Not-in-family\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n79\t Private\t 124744\t Some-college\t 10\t Married-civ-spouse\t Prof-specialty\t Other-relative\t White\t Male\t 0\t 0\t 20\t United-States\t <=50K\n27\t Private\t 213921\t HS-grad\t 9\t Never-married\t Other-service\t Own-child\t White\t Male\t 0\t 0\t 40\t Mexico\t <=50K\n40\t Private\t 32214\t Assoc-acdm\t 12\t Married-civ-spouse\t Adm-clerical\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n67\t ?\t 212759\t 10th\t 6\t Married-civ-spouse\t ?\t Husband\t White\t Male\t 0\t 0\t 2\t United-States\t <=50K\n18\t Private\t 309634\t 11th\t 7\t Never-married\t Other-service\t Own-child\t White\t Female\t 0\t 0\t 22\t United-States\t <=50K\n31\t Local-gov\t 125927\t 7th-8th\t 4\t Married-civ-spouse\t Farming-fishing\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n18\t Private\t 446839\t HS-grad\t 9\t Never-married\t Sales\t Not-in-family\t White\t Male\t 0\t 0\t 30\t United-States\t <=50K\n52\t Private\t 276515\t Bachelors\t 13\t Married-civ-spouse\t Other-service\t Husband\t White\t Male\t 0\t 0\t 40\t Cuba\t <=50K\n46\t Private\t 51618\t HS-grad\t 9\t Married-civ-spouse\t Other-service\t Wife\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n59\t Private\t 159937\t HS-grad\t 9\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 48\t United-States\t <=50K\n44\t Private\t 343591\t HS-grad\t 9\t Divorced\t Craft-repair\t Not-in-family\t White\t Female\t 14344\t 0\t 40\t United-States\t >50K\n53\t Private\t 346253\t HS-grad\t 9\t Divorced\t Sales\t Own-child\t White\t Female\t 0\t 0\t 35\t United-States\t <=50K\n49\t Local-gov\t 268234\t HS-grad\t 9\t Married-civ-spouse\t Protective-serv\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n33\t Private\t 202051\t Masters\t 14\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t <=50K\n30\t Private\t 54334\t 9th\t 5\t Never-married\t Sales\t Not-in-family\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n43\t Federal-gov\t 410867\t Doctorate\t 16\t Never-married\t Prof-specialty\t Not-in-family\t White\t Female\t 0\t 0\t 50\t United-States\t >50K\n57\t Private\t 249977\t Assoc-voc\t 11\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n37\t Private\t 286730\t Some-college\t 10\t Divorced\t Craft-repair\t Unmarried\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n28\t Private\t 212563\t Some-college\t 10\t Divorced\t Machine-op-inspct\t Unmarried\t Black\t Female\t 0\t 0\t 25\t United-States\t <=50K\n30\t Private\t 117747\t HS-grad\t 9\t Married-civ-spouse\t Sales\t Wife\t Asian-Pac-Islander\t Female\t 0\t 1573\t 35\t ?\t <=50K\n34\t Local-gov\t 226296\t Bachelors\t 13\t Married-civ-spouse\t Protective-serv\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n29\t Local-gov\t 115585\t Some-college\t 10\t Never-married\t Handlers-cleaners\t Not-in-family\t White\t Male\t 0\t 0\t 50\t United-States\t <=50K\n48\t Self-emp-not-inc\t 191277\t Doctorate\t 16\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 1902\t 60\t United-States\t >50K\n37\t Private\t 202683\t Some-college\t 10\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 48\t United-States\t >50K\n48\t Private\t 171095\t Assoc-acdm\t 12\t Divorced\t Exec-managerial\t Unmarried\t White\t Female\t 0\t 0\t 40\t England\t <=50K\n32\t Federal-gov\t 249409\t HS-grad\t 9\t Never-married\t Other-service\t Own-child\t Black\t Male\t 0\t 0\t 40\t United-States\t <=50K\n76\t Private\t 124191\t Masters\t 14\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n"},{"type":"TEXT","data":""}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196581_1847186274","id":"20190610-131908_241308858","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:46:43+0000","dateFinished":"2019-06-13T12:46:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:286"},{"text":"// count data_csv\ndata_csv.count()","user":"anonymous","dateUpdated":"2019-06-13T12:46:48+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res4: Long = 101\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196582_1363341740","id":"20190610-131916_1323982178","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:46:48+0000","dateFinished":"2019-06-13T12:46:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:287"},{"text":"// filter in data_csv (for example : filter row having \"age\" >= 30)\nval data_filtered = data_csv.filter($\"age\" >= 30)\n                    // order by age desc\n                    .orderBy($\"age\".desc)\n\n// We can add as many transformations (or filters) as we want to.","user":"anonymous","dateUpdated":"2019-06-13T12:46:51+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"data_filtered: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [age: string, workclass: string ... 13 more fields]\n"}]},"apps":[],"jobName":"paragraph_1560422196582_-214500024","id":"20190610-132026_1438101567","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:46:51+0000","dateFinished":"2019-06-13T12:46:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:288"},{"text":"z.show(data_filtered)","user":"anonymous","dateUpdated":"2019-06-13T12:46:53+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","workclass":"string","fnlwgt":"string","education":"string","education_num":"string","martial_status":"string","occupation":"string","relationship":"string","race":"string","sex":"string","capital_gain":"string","capital_loss":"string","hours_per_week":"string","native_country":"string","salary":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tworkclass\tfnlwgt\teducation\teducation_num\tmartial_status\toccupation\trelationship\trace\tsex\tcapital_gain\tcapital_loss\thours_per_week\tnative_country\tsalary\n79\t Private\t 124744\t Some-college\t 10\t Married-civ-spouse\t Prof-specialty\t Other-relative\t White\t Male\t 0\t 0\t 20\t United-States\t <=50K\n76\t Private\t 124191\t Masters\t 14\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n67\t ?\t 212759\t 10th\t 6\t Married-civ-spouse\t ?\t Husband\t White\t Male\t 0\t 0\t 2\t United-States\t <=50K\n59\t Private\t 109015\t HS-grad\t 9\t Divorced\t Tech-support\t Unmarried\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n59\t Private\t 159937\t HS-grad\t 9\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 48\t United-States\t <=50K\n57\t Private\t 249977\t Assoc-voc\t 11\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n57\t Federal-gov\t 337895\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t Black\t Male\t 0\t 0\t 40\t United-States\t >50K\n56\t Local-gov\t 216851\t Bachelors\t 13\t Married-civ-spouse\t Tech-support\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n54\t ?\t 180211\t Some-college\t 10\t Married-civ-spouse\t ?\t Husband\t Asian-Pac-Islander\t Male\t 0\t 0\t 60\t South\t >50K\n54\t Private\t 302146\t HS-grad\t 9\t Separated\t Other-service\t Unmarried\t Black\t Female\t 0\t 0\t 20\t United-States\t <=50K\n53\t Self-emp-not-inc\t 88506\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n53\t Private\t 144361\t HS-grad\t 9\t Married-civ-spouse\t Machine-op-inspct\t Husband\t White\t Male\t 0\t 0\t 38\t United-States\t <=50K\n53\t Private\t 169846\t HS-grad\t 9\t Married-civ-spouse\t Adm-clerical\t Wife\t White\t Female\t 0\t 0\t 40\t United-States\t >50K\n53\t Private\t 346253\t HS-grad\t 9\t Divorced\t Sales\t Own-child\t White\t Female\t 0\t 0\t 35\t United-States\t <=50K\n53\t Private\t 234721\t 11th\t 7\t Married-civ-spouse\t Handlers-cleaners\t Husband\t Black\t Male\t 0\t 0\t 40\t United-States\t <=50K\n52\t Self-emp-not-inc\t 209642\t HS-grad\t 9\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 45\t United-States\t >50K\n52\t Private\t 276515\t Bachelors\t 13\t Married-civ-spouse\t Other-service\t Husband\t White\t Male\t 0\t 0\t 40\t Cuba\t <=50K\n50\t Federal-gov\t 251585\t Bachelors\t 13\t Divorced\t Exec-managerial\t Not-in-family\t White\t Male\t 0\t 0\t 55\t United-States\t >50K\n50\t Self-emp-not-inc\t 83311\t Bachelors\t 13\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 13\t United-States\t <=50K\n49\t Private\t 94638\t HS-grad\t 9\t Separated\t Adm-clerical\t Unmarried\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n49\t Self-emp-inc\t 191681\t Some-college\t 10\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t >50K\n49\t Private\t 160187\t 9th\t 5\t Married-spouse-absent\t Other-service\t Not-in-family\t Black\t Female\t 0\t 0\t 16\t Jamaica\t <=50K\n49\t Local-gov\t 268234\t HS-grad\t 9\t Married-civ-spouse\t Protective-serv\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n49\t Private\t 193366\t HS-grad\t 9\t Married-civ-spouse\t Craft-repair\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n48\t Private\t 149640\t HS-grad\t 9\t Married-civ-spouse\t Transport-moving\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n48\t Private\t 242406\t 11th\t 7\t Never-married\t Machine-op-inspct\t Unmarried\t White\t Male\t 0\t 0\t 40\t Puerto-Rico\t <=50K\n48\t Private\t 171095\t Assoc-acdm\t 12\t Divorced\t Exec-managerial\t Unmarried\t White\t Female\t 0\t 0\t 40\t England\t <=50K\n48\t Self-emp-not-inc\t 265477\t Assoc-acdm\t 12\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n48\t Self-emp-not-inc\t 191277\t Doctorate\t 16\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 1902\t 60\t United-States\t >50K\n47\t Self-emp-inc\t 109832\t HS-grad\t 9\t Divorced\t Exec-managerial\t Not-in-family\t White\t Male\t 0\t 0\t 60\t United-States\t <=50K\n47\t Private\t 51835\t Prof-school\t 15\t Married-civ-spouse\t Prof-specialty\t Wife\t White\t Female\t 0\t 1902\t 60\t Honduras\t >50K\n46\t Private\t 51618\t HS-grad\t 9\t Married-civ-spouse\t Other-service\t Wife\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n46\t Private\t 216666\t 5th-6th\t 3\t Married-civ-spouse\t Machine-op-inspct\t Husband\t White\t Male\t 0\t 0\t 40\t Mexico\t <=50K\n45\t Private\t 386940\t Bachelors\t 13\t Divorced\t Exec-managerial\t Own-child\t White\t Male\t 0\t 1408\t 40\t United-States\t <=50K\n44\t Private\t 128354\t Masters\t 14\t Divorced\t Exec-managerial\t Unmarried\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n44\t Private\t 343591\t HS-grad\t 9\t Divorced\t Craft-repair\t Not-in-family\t White\t Female\t 14344\t 0\t 40\t United-States\t >50K\n43\t Self-emp-not-inc\t 292175\t Masters\t 14\t Divorced\t Exec-managerial\t Unmarried\t White\t Female\t 0\t 0\t 45\t United-States\t >50K\n43\t Private\t 117037\t 11th\t 7\t Married-civ-spouse\t Transport-moving\t Husband\t White\t Male\t 0\t 2042\t 40\t United-States\t <=50K\n43\t Federal-gov\t 410867\t Doctorate\t 16\t Never-married\t Prof-specialty\t Not-in-family\t White\t Female\t 0\t 0\t 50\t United-States\t >50K\n43\t Private\t 237993\t Some-college\t 10\t Married-civ-spouse\t Tech-support\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n42\t Private\t 116632\t Doctorate\t 16\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 45\t United-States\t >50K\n42\t Private\t 159449\t Bachelors\t 13\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 5178\t 0\t 40\t United-States\t >50K\n41\t State-gov\t 101603\t Assoc-voc\t 11\t Married-civ-spouse\t Craft-repair\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n41\t Private\t 147372\t HS-grad\t 9\t Married-civ-spouse\t Adm-clerical\t Husband\t White\t Male\t 0\t 0\t 48\t United-States\t <=50K\n40\t Private\t 32214\t Assoc-acdm\t 12\t Married-civ-spouse\t Adm-clerical\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n40\t Private\t 121772\t Assoc-voc\t 11\t Married-civ-spouse\t Craft-repair\t Husband\t Asian-Pac-Islander\t Male\t 0\t 0\t 40\t ?\t >50K\n40\t Private\t 193524\t Doctorate\t 16\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 60\t United-States\t >50K\n39\t Private\t 367260\t HS-grad\t 9\t Divorced\t Exec-managerial\t Not-in-family\t White\t Male\t 0\t 0\t 80\t United-States\t <=50K\n39\t State-gov\t 77516\t Bachelors\t 13\t Never-married\t Adm-clerical\t Not-in-family\t White\t Male\t 2174\t 0\t 40\t United-States\t <=50K\n38\t Private\t 215646\t HS-grad\t 9\t Divorced\t Handlers-cleaners\t Not-in-family\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n38\t Private\t 28887\t 11th\t 7\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t <=50K\n37\t Private\t 286730\t Some-college\t 10\t Divorced\t Craft-repair\t Unmarried\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n37\t Private\t 202683\t Some-college\t 10\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 48\t United-States\t >50K\n37\t Private\t 284582\t Masters\t 14\t Married-civ-spouse\t Exec-managerial\t Wife\t White\t Female\t 0\t 0\t 40\t United-States\t <=50K\n37\t Private\t 280464\t Some-college\t 10\t Married-civ-spouse\t Exec-managerial\t Husband\t Black\t Male\t 0\t 0\t 80\t United-States\t >50K\n36\t Private\t 155537\t HS-grad\t 9\t Married-civ-spouse\t Craft-repair\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n35\t Private\t 56352\t Assoc-voc\t 11\t Married-civ-spouse\t Other-service\t Husband\t White\t Male\t 0\t 0\t 40\t Puerto-Rico\t <=50K\n35\t Federal-gov\t 76845\t 9th\t 5\t Married-civ-spouse\t Farming-fishing\t Husband\t Black\t Male\t 0\t 0\t 40\t United-States\t <=50K\n34\t Private\t 245487\t 7th-8th\t 4\t Married-civ-spouse\t Transport-moving\t Husband\t Amer-Indian-Eskimo\t Male\t 0\t 0\t 45\t Mexico\t <=50K\n34\t Local-gov\t 226296\t Bachelors\t 13\t Married-civ-spouse\t Protective-serv\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n33\t Private\t 202051\t Masters\t 14\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t <=50K\n32\t Private\t 186824\t HS-grad\t 9\t Never-married\t Machine-op-inspct\t Unmarried\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n32\t Federal-gov\t 249409\t HS-grad\t 9\t Never-married\t Other-service\t Own-child\t Black\t Male\t 0\t 0\t 40\t United-States\t <=50K\n32\t ?\t 293936\t 7th-8th\t 4\t Married-spouse-absent\t ?\t Not-in-family\t White\t Male\t 0\t 0\t 40\t ?\t <=50K\n32\t Private\t 205019\t Assoc-acdm\t 12\t Never-married\t Sales\t Not-in-family\t Black\t Male\t 0\t 0\t 50\t United-States\t <=50K\n31\t Private\t 507875\t 9th\t 5\t Married-civ-spouse\t Machine-op-inspct\t Husband\t White\t Male\t 0\t 0\t 43\t United-States\t <=50K\n31\t Private\t 309974\t Bachelors\t 13\t Separated\t Sales\t Own-child\t Black\t Female\t 0\t 0\t 40\t United-States\t <=50K\n31\t Local-gov\t 125927\t 7th-8th\t 4\t Married-civ-spouse\t Farming-fishing\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n31\t Private\t 45781\t Masters\t 14\t Never-married\t Prof-specialty\t Not-in-family\t White\t Female\t 14084\t 0\t 50\t United-States\t >50K\n31\t Private\t 84154\t Some-college\t 10\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 0\t 0\t 38\t ?\t >50K\n30\t State-gov\t 141297\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t Asian-Pac-Islander\t Male\t 0\t 0\t 40\t India\t >50K\n30\t Federal-gov\t 59951\t Some-college\t 10\t Married-civ-spouse\t Adm-clerical\t Own-child\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n30\t Private\t 188146\t HS-grad\t 9\t Married-civ-spouse\t Machine-op-inspct\t Husband\t White\t Male\t 5013\t 0\t 40\t United-States\t <=50K\n30\t Private\t 59496\t Bachelors\t 13\t Married-civ-spouse\t Sales\t Husband\t White\t Male\t 2407\t 0\t 40\t United-States\t <=50K\n30\t Private\t 54334\t 9th\t 5\t Never-married\t Sales\t Not-in-family\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n30\t Private\t 117747\t HS-grad\t 9\t Married-civ-spouse\t Sales\t Wife\t Asian-Pac-Islander\t Female\t 0\t 1573\t 35\t ?\t <=50K\n"},{"type":"TEXT","data":""}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196582_1885837161","id":"20190610-132326_2082761532","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:46:53+0000","dateFinished":"2019-06-13T12:46:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:289"},{"text":"// we can create some basics plots, such as : bar chart of number of person by education level and sex\nz.show(data_filtered.select(\"age\", \"sex\", \"education\"))","user":"anonymous","dateUpdated":"2019-06-19T19:24:28+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","sex":"string","education":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"rotate"},"scatterChart":{"xAxis":{"name":"age","index":0,"aggr":"sum"},"yAxis":{"name":"education","index":2,"aggr":"sum"},"group":{"name":"sex","index":1,"aggr":"sum"}}},"keys":[],"groups":[{"name":"education","index":2,"aggr":"sum"},{"name":"sex","index":1,"aggr":"sum"}],"values":[{"name":"age","index":0,"aggr":"count"}],"commonSetting":{}},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tsex\teducation\n79\t Male\t Some-college\n76\t Male\t Masters\n67\t Male\t 10th\n59\t Female\t HS-grad\n59\t Male\t HS-grad\n57\t Male\t Assoc-voc\n57\t Male\t Bachelors\n56\t Male\t Bachelors\n54\t Male\t Some-college\n54\t Female\t HS-grad\n53\t Male\t Bachelors\n53\t Male\t HS-grad\n53\t Female\t HS-grad\n53\t Female\t HS-grad\n53\t Male\t 11th\n52\t Male\t HS-grad\n52\t Male\t Bachelors\n50\t Male\t Bachelors\n50\t Male\t Bachelors\n49\t Female\t HS-grad\n49\t Male\t Some-college\n49\t Female\t 9th\n49\t Male\t HS-grad\n49\t Male\t HS-grad\n48\t Male\t HS-grad\n48\t Male\t 11th\n48\t Female\t Assoc-acdm\n48\t Male\t Assoc-acdm\n48\t Male\t Doctorate\n47\t Male\t HS-grad\n47\t Female\t Prof-school\n46\t Female\t HS-grad\n46\t Male\t 5th-6th\n45\t Male\t Bachelors\n44\t Female\t Masters\n44\t Female\t HS-grad\n43\t Female\t Masters\n43\t Male\t 11th\n43\t Female\t Doctorate\n43\t Male\t Some-college\n42\t Male\t Doctorate\n42\t Male\t Bachelors\n41\t Male\t Assoc-voc\n41\t Male\t HS-grad\n40\t Male\t Assoc-acdm\n40\t Male\t Assoc-voc\n40\t Male\t Doctorate\n39\t Male\t HS-grad\n39\t Male\t Bachelors\n38\t Male\t HS-grad\n38\t Male\t 11th\n37\t Female\t Some-college\n37\t Male\t Some-college\n37\t Female\t Masters\n37\t Male\t Some-college\n36\t Male\t HS-grad\n35\t Male\t Assoc-voc\n35\t Male\t 9th\n34\t Male\t 7th-8th\n34\t Male\t Bachelors\n33\t Male\t Masters\n32\t Male\t HS-grad\n32\t Male\t HS-grad\n32\t Male\t 7th-8th\n32\t Male\t Assoc-acdm\n31\t Male\t 9th\n31\t Female\t Bachelors\n31\t Male\t 7th-8th\n31\t Female\t Masters\n31\t Male\t Some-college\n30\t Male\t Bachelors\n30\t Male\t Some-college\n30\t Male\t HS-grad\n30\t Male\t Bachelors\n30\t Male\t 9th\n30\t Female\t HS-grad\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1560422196583_1645515915","id":"20190611-074711_319222601","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:290"},{"text":"// or Scatterplot of martial status and age by education level \nz.show(data_filtered.select(\"age\", \"martial_status\", \"education_num\"))","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"scatterChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","salary":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"scatterChart":{"yAxis":{"name":"martial_status","index":1,"aggr":"sum"},"group":{"name":"education_num","index":2,"aggr":"sum"},"xAxis":{"name":"age","index":0,"aggr":"sum"}}},"keys":[{"name":"age","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"salary","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tmartial_status\teducation_num\n79\t Married-civ-spouse\t 10\n76\t Married-civ-spouse\t 14\n67\t Married-civ-spouse\t 6\n59\t Divorced\t 9\n59\t Married-civ-spouse\t 9\n57\t Married-civ-spouse\t 11\n57\t Married-civ-spouse\t 13\n56\t Married-civ-spouse\t 13\n54\t Married-civ-spouse\t 10\n54\t Separated\t 9\n53\t Married-civ-spouse\t 13\n53\t Married-civ-spouse\t 9\n53\t Married-civ-spouse\t 9\n53\t Divorced\t 9\n53\t Married-civ-spouse\t 7\n52\t Married-civ-spouse\t 9\n52\t Married-civ-spouse\t 13\n50\t Divorced\t 13\n50\t Married-civ-spouse\t 13\n49\t Separated\t 9\n49\t Married-civ-spouse\t 10\n49\t Married-spouse-absent\t 5\n49\t Married-civ-spouse\t 9\n49\t Married-civ-spouse\t 9\n48\t Married-civ-spouse\t 9\n48\t Never-married\t 7\n48\t Divorced\t 12\n48\t Married-civ-spouse\t 12\n48\t Married-civ-spouse\t 16\n47\t Divorced\t 9\n47\t Married-civ-spouse\t 15\n46\t Married-civ-spouse\t 9\n46\t Married-civ-spouse\t 3\n45\t Divorced\t 13\n44\t Divorced\t 14\n44\t Divorced\t 9\n43\t Divorced\t 14\n43\t Married-civ-spouse\t 7\n43\t Never-married\t 16\n43\t Married-civ-spouse\t 10\n42\t Married-civ-spouse\t 16\n42\t Married-civ-spouse\t 13\n41\t Married-civ-spouse\t 11\n41\t Married-civ-spouse\t 9\n40\t Married-civ-spouse\t 12\n40\t Married-civ-spouse\t 11\n40\t Married-civ-spouse\t 16\n39\t Divorced\t 9\n39\t Never-married\t 13\n38\t Divorced\t 9\n38\t Married-civ-spouse\t 7\n37\t Divorced\t 10\n37\t Married-civ-spouse\t 10\n37\t Married-civ-spouse\t 14\n37\t Married-civ-spouse\t 10\n36\t Married-civ-spouse\t 9\n35\t Married-civ-spouse\t 11\n35\t Married-civ-spouse\t 5\n34\t Married-civ-spouse\t 4\n34\t Married-civ-spouse\t 13\n33\t Married-civ-spouse\t 14\n32\t Never-married\t 9\n32\t Never-married\t 9\n32\t Married-spouse-absent\t 4\n32\t Never-married\t 12\n31\t Married-civ-spouse\t 5\n31\t Separated\t 13\n31\t Married-civ-spouse\t 4\n31\t Never-married\t 14\n31\t Married-civ-spouse\t 10\n30\t Married-civ-spouse\t 13\n30\t Married-civ-spouse\t 10\n30\t Married-civ-spouse\t 9\n30\t Married-civ-spouse\t 13\n30\t Never-married\t 5\n30\t Married-civ-spouse\t 9\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1560422196583_170734057","id":"20190611-075128_1961630265","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:291"},{"text":"%md\n### Read json in HDFS","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Read json in HDFS</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196584_1348927123","id":"20190610-132523_59130138","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:292"},{"text":"val data_json = spark.read\n  .option(\"multiLine\", true).option(\"mode\", \"PERMISSIVE\")\n  .json(\"hdfs://hupi-factory-02-01-01.factory02.viet.cloud-torus.com:8020/user/factory02/formation_hupi/adult.json\")","user":"anonymous","dateUpdated":"2019-06-13T12:50:00+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"data_json: org.apache.spark.sql.DataFrame = [age: bigint, capital_gain: bigint ... 13 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=1"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196584_-1305461239","id":"20190610-132854_957015678","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:50:00+0000","dateFinished":"2019-06-13T12:50:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:293"},{"text":"z.show(data_json)","user":"anonymous","dateUpdated":"2019-06-13T12:50:03+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","capital_gain":"string","capital_loss":"string","education":"string","education_num":"string","fnlwgt":"string","hours_per_week":"string","martial_status":"string","native_country":"string","occupation":"string","race":"string","relationship":"string","salary":"string","sex":"string","workclass":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tcapital_gain\tcapital_loss\teducation\teducation_num\tfnlwgt\thours_per_week\tmartial_status\tnative_country\toccupation\trace\trelationship\tsalary\tsex\tworkclass\n39\t2174\t0\t Bachelors\t13\t77516\t40\t Never-married\t United-States\t Adm-clerical\t White\t Not-in-family\t <=50K\t Male\t State-gov\n50\t0\t0\t Bachelors\t13\t83311\t13\t Married-civ-spouse\t United-States\t Exec-managerial\t White\t Husband\t <=50K\t Male\t Self-emp-not-inc\n38\t0\t0\t HS-grad\t9\t215646\t40\t Divorced\t United-States\t Handlers-cleaners\t White\t Not-in-family\t <=50K\t Male\t Private\n53\t0\t0\t 11th\t7\t234721\t40\t Married-civ-spouse\t United-States\t Handlers-cleaners\t Black\t Husband\t <=50K\t Male\t Private\n28\t0\t0\t Bachelors\t13\t338409\t40\t Married-civ-spouse\t Cuba\t Prof-specialty\t Black\t Wife\t <=50K\t Female\t Private\n37\t0\t0\t Masters\t14\t284582\t40\t Married-civ-spouse\t United-States\t Exec-managerial\t White\t Wife\t <=50K\t Female\t Private\n49\t0\t0\t 9th\t5\t160187\t16\t Married-spouse-absent\t Jamaica\t Other-service\t Black\t Not-in-family\t <=50K\t Female\t Private\n52\t0\t0\t HS-grad\t9\t209642\t45\t Married-civ-spouse\t United-States\t Exec-managerial\t White\t Husband\t >50K\t Male\t Self-emp-not-inc\n31\t14084\t0\t Masters\t14\t45781\t50\t Never-married\t United-States\t Prof-specialty\t White\t Not-in-family\t >50K\t Female\t Private\n42\t5178\t0\t Bachelors\t13\t159449\t40\t Married-civ-spouse\t United-States\t Exec-managerial\t White\t Husband\t >50K\t Male\t Private\n37\t0\t0\t Some-college\t10\t280464\t80\t Married-civ-spouse\t United-States\t Exec-managerial\t Black\t Husband\t >50K\t Male\t Private\n30\t0\t0\t Bachelors\t13\t141297\t40\t Married-civ-spouse\t India\t Prof-specialty\t Asian-Pac-Islander\t Husband\t >50K\t Male\t State-gov\n23\t0\t0\t Bachelors\t13\t122272\t30\t Never-married\t United-States\t Adm-clerical\t White\t Own-child\t <=50K\t Female\t Private\n32\t0\t0\t Assoc-acdm\t12\t205019\t50\t Never-married\t United-States\t Sales\t Black\t Not-in-family\t <=50K\t Male\t Private\n40\t0\t0\t Assoc-voc\t11\t121772\t40\t Married-civ-spouse\t ?\t Craft-repair\t Asian-Pac-Islander\t Husband\t >50K\t Male\t Private\n34\t0\t0\t 7th-8th\t4\t245487\t45\t Married-civ-spouse\t Mexico\t Transport-moving\t Amer-Indian-Eskimo\t Husband\t <=50K\t Male\t Private\n25\t0\t0\t HS-grad\t9\t176756\t35\t Never-married\t United-States\t Farming-fishing\t White\t Own-child\t <=50K\t Male\t Self-emp-not-inc\n32\t0\t0\t HS-grad\t9\t186824\t40\t Never-married\t United-States\t Machine-op-inspct\t White\t Unmarried\t <=50K\t Male\t Private\n38\t0\t0\t 11th\t7\t28887\t50\t Married-civ-spouse\t United-States\t Sales\t White\t Husband\t <=50K\t Male\t Private\n43\t0\t0\t Masters\t14\t292175\t45\t Divorced\t United-States\t Exec-managerial\t White\t Unmarried\t >50K\t Female\t Self-emp-not-inc\n40\t0\t0\t Doctorate\t16\t193524\t60\t Married-civ-spouse\t United-States\t Prof-specialty\t White\t Husband\t >50K\t Male\t Private\n54\t0\t0\t HS-grad\t9\t302146\t20\t Separated\t United-States\t Other-service\t Black\t Unmarried\t <=50K\t Female\t Private\n35\t0\t0\t 9th\t5\t76845\t40\t Married-civ-spouse\t United-States\t Farming-fishing\t Black\t Husband\t <=50K\t Male\t Federal-gov\n43\t0\t2042\t 11th\t7\t117037\t40\t Married-civ-spouse\t United-States\t Transport-moving\t White\t Husband\t <=50K\t Male\t Private\n59\t0\t0\t HS-grad\t9\t109015\t40\t Divorced\t United-States\t Tech-support\t White\t Unmarried\t <=50K\t Female\t Private\n56\t0\t0\t Bachelors\t13\t216851\t40\t Married-civ-spouse\t United-States\t Tech-support\t White\t Husband\t >50K\t Male\t Local-gov\n19\t0\t0\t HS-grad\t9\t168294\t40\t Never-married\t United-States\t Craft-repair\t White\t Own-child\t <=50K\t Male\t Private\n54\t0\t0\t Some-college\t10\t180211\t60\t Married-civ-spouse\t South\t ?\t Asian-Pac-Islander\t Husband\t >50K\t Male\t ?\n39\t0\t0\t HS-grad\t9\t367260\t80\t Divorced\t United-States\t Exec-managerial\t White\t Not-in-family\t <=50K\t Male\t Private\n49\t0\t0\t HS-grad\t9\t193366\t40\t Married-civ-spouse\t United-States\t Craft-repair\t White\t Husband\t <=50K\t Male\t Private\n23\t0\t0\t Assoc-acdm\t12\t190709\t52\t Never-married\t United-States\t Protective-serv\t White\t Not-in-family\t <=50K\t Male\t Local-gov\n20\t0\t0\t Some-college\t10\t266015\t44\t Never-married\t United-States\t Sales\t Black\t Own-child\t <=50K\t Male\t Private\n45\t0\t1408\t Bachelors\t13\t386940\t40\t Divorced\t United-States\t Exec-managerial\t White\t Own-child\t <=50K\t Male\t Private\n30\t0\t0\t Some-college\t10\t59951\t40\t Married-civ-spouse\t United-States\t Adm-clerical\t White\t Own-child\t <=50K\t Male\t Federal-gov\n22\t0\t0\t Some-college\t10\t311512\t15\t Married-civ-spouse\t United-States\t Other-service\t Black\t Husband\t <=50K\t Male\t State-gov\n48\t0\t0\t 11th\t7\t242406\t40\t Never-married\t Puerto-Rico\t Machine-op-inspct\t White\t Unmarried\t <=50K\t Male\t Private\n21\t0\t0\t Some-college\t10\t197200\t40\t Never-married\t United-States\t Machine-op-inspct\t White\t Own-child\t <=50K\t Male\t Private\n19\t0\t0\t HS-grad\t9\t544091\t25\t Married-AF-spouse\t United-States\t Adm-clerical\t White\t Wife\t <=50K\t Female\t Private\n31\t0\t0\t Some-college\t10\t84154\t38\t Married-civ-spouse\t ?\t Sales\t White\t Husband\t >50K\t Male\t Private\n48\t0\t0\t Assoc-acdm\t12\t265477\t40\t Married-civ-spouse\t United-States\t Prof-specialty\t White\t Husband\t <=50K\t Male\t Self-emp-not-inc\n31\t0\t0\t 9th\t5\t507875\t43\t Married-civ-spouse\t United-States\t Machine-op-inspct\t White\t Husband\t <=50K\t Male\t Private\n53\t0\t0\t Bachelors\t13\t88506\t40\t Married-civ-spouse\t United-States\t Prof-specialty\t White\t Husband\t <=50K\t Male\t Self-emp-not-inc\n24\t0\t0\t Bachelors\t13\t172987\t50\t Married-civ-spouse\t United-States\t Tech-support\t White\t Husband\t <=50K\t Male\t Private\n49\t0\t0\t HS-grad\t9\t94638\t40\t Separated\t United-States\t Adm-clerical\t White\t Unmarried\t <=50K\t Female\t Private\n25\t0\t0\t HS-grad\t9\t289980\t35\t Never-married\t United-States\t Handlers-cleaners\t White\t Not-in-family\t <=50K\t Male\t Private\n57\t0\t0\t Bachelors\t13\t337895\t40\t Married-civ-spouse\t United-States\t Prof-specialty\t Black\t Husband\t >50K\t Male\t Federal-gov\n53\t0\t0\t HS-grad\t9\t144361\t38\t Married-civ-spouse\t United-States\t Machine-op-inspct\t White\t Husband\t <=50K\t Male\t Private\n44\t0\t0\t Masters\t14\t128354\t40\t Divorced\t United-States\t Exec-managerial\t White\t Unmarried\t <=50K\t Female\t Private\n41\t0\t0\t Assoc-voc\t11\t101603\t40\t Married-civ-spouse\t United-States\t Craft-repair\t White\t Husband\t <=50K\t Male\t State-gov\n29\t0\t0\t Assoc-voc\t11\t271466\t43\t Never-married\t United-States\t Prof-specialty\t White\t Not-in-family\t <=50K\t Male\t Private\n25\t0\t0\t Some-college\t10\t32275\t40\t Married-civ-spouse\t United-States\t Exec-managerial\t Other\t Wife\t <=50K\t Female\t Private\n18\t0\t0\t HS-grad\t9\t226956\t30\t Never-married\t ?\t Other-service\t White\t Own-child\t <=50K\t Female\t Private\n47\t0\t1902\t Prof-school\t15\t51835\t60\t Married-civ-spouse\t Honduras\t Prof-specialty\t White\t Wife\t >50K\t Female\t Private\n50\t0\t0\t Bachelors\t13\t251585\t55\t Divorced\t United-States\t Exec-managerial\t White\t Not-in-family\t >50K\t Male\t Federal-gov\n47\t0\t0\t HS-grad\t9\t109832\t60\t Divorced\t United-States\t Exec-managerial\t White\t Not-in-family\t <=50K\t Male\t Self-emp-inc\n43\t0\t0\t Some-college\t10\t237993\t40\t Married-civ-spouse\t United-States\t Tech-support\t White\t Husband\t >50K\t Male\t Private\n46\t0\t0\t 5th-6th\t3\t216666\t40\t Married-civ-spouse\t Mexico\t Machine-op-inspct\t White\t Husband\t <=50K\t Male\t Private\n35\t0\t0\t Assoc-voc\t11\t56352\t40\t Married-civ-spouse\t Puerto-Rico\t Other-service\t White\t Husband\t <=50K\t Male\t Private\n41\t0\t0\t HS-grad\t9\t147372\t48\t Married-civ-spouse\t United-States\t Adm-clerical\t White\t Husband\t <=50K\t Male\t Private\n30\t5013\t0\t HS-grad\t9\t188146\t40\t Married-civ-spouse\t United-States\t Machine-op-inspct\t White\t Husband\t <=50K\t Male\t Private\n30\t2407\t0\t Bachelors\t13\t59496\t40\t Married-civ-spouse\t United-States\t Sales\t White\t Husband\t <=50K\t Male\t Private\n32\t0\t0\t 7th-8th\t4\t293936\t40\t Married-spouse-absent\t ?\t ?\t White\t Not-in-family\t <=50K\t Male\t ?\n48\t0\t0\t HS-grad\t9\t149640\t40\t Married-civ-spouse\t United-States\t Transport-moving\t White\t Husband\t <=50K\t Male\t Private\n42\t0\t0\t Doctorate\t16\t116632\t45\t Married-civ-spouse\t United-States\t Prof-specialty\t White\t Husband\t >50K\t Male\t Private\n29\t0\t0\t Some-college\t10\t105598\t58\t Divorced\t United-States\t Tech-support\t White\t Not-in-family\t <=50K\t Male\t Private\n36\t0\t0\t HS-grad\t9\t155537\t40\t Married-civ-spouse\t United-States\t Craft-repair\t White\t Husband\t <=50K\t Male\t Private\n28\t0\t0\t Some-college\t10\t183175\t40\t Divorced\t United-States\t Adm-clerical\t White\t Not-in-family\t <=50K\t Female\t Private\n53\t0\t0\t HS-grad\t9\t169846\t40\t Married-civ-spouse\t United-States\t Adm-clerical\t White\t Wife\t >50K\t Female\t Private\n49\t0\t0\t Some-college\t10\t191681\t50\t Married-civ-spouse\t United-States\t Exec-managerial\t White\t Husband\t >50K\t Male\t Self-emp-inc\n25\t0\t0\t Some-college\t10\t200681\t40\t Never-married\t United-States\t ?\t White\t Own-child\t <=50K\t Male\t ?\n19\t0\t0\t Some-college\t10\t101509\t32\t Never-married\t United-States\t Prof-specialty\t White\t Own-child\t <=50K\t Male\t Private\n31\t0\t0\t Bachelors\t13\t309974\t40\t Separated\t United-States\t Sales\t Black\t Own-child\t <=50K\t Female\t Private\n29\t0\t0\t Bachelors\t13\t162298\t70\t Married-civ-spouse\t United-States\t Sales\t White\t Husband\t >50K\t Male\t Self-emp-not-inc\n23\t0\t0\t Some-college\t10\t211678\t40\t Never-married\t United-States\t Machine-op-inspct\t White\t Not-in-family\t <=50K\t Male\t Private\n79\t0\t0\t Some-college\t10\t124744\t20\t Married-civ-spouse\t United-States\t Prof-specialty\t White\t Other-relative\t <=50K\t Male\t Private\n27\t0\t0\t HS-grad\t9\t213921\t40\t Never-married\t Mexico\t Other-service\t White\t Own-child\t <=50K\t Male\t Private\n40\t0\t0\t Assoc-acdm\t12\t32214\t40\t Married-civ-spouse\t United-States\t Adm-clerical\t White\t Husband\t <=50K\t Male\t Private\n67\t0\t0\t 10th\t6\t212759\t2\t Married-civ-spouse\t United-States\t ?\t White\t Husband\t <=50K\t Male\t ?\n18\t0\t0\t 11th\t7\t309634\t22\t Never-married\t United-States\t Other-service\t White\t Own-child\t <=50K\t Female\t Private\n31\t0\t0\t 7th-8th\t4\t125927\t40\t Married-civ-spouse\t United-States\t Farming-fishing\t White\t Husband\t <=50K\t Male\t Local-gov\n18\t0\t0\t HS-grad\t9\t446839\t30\t Never-married\t United-States\t Sales\t White\t Not-in-family\t <=50K\t Male\t Private\n52\t0\t0\t Bachelors\t13\t276515\t40\t Married-civ-spouse\t Cuba\t Other-service\t White\t Husband\t <=50K\t Male\t Private\n46\t0\t0\t HS-grad\t9\t51618\t40\t Married-civ-spouse\t United-States\t Other-service\t White\t Wife\t <=50K\t Female\t Private\n59\t0\t0\t HS-grad\t9\t159937\t48\t Married-civ-spouse\t United-States\t Sales\t White\t Husband\t <=50K\t Male\t Private\n44\t14344\t0\t HS-grad\t9\t343591\t40\t Divorced\t United-States\t Craft-repair\t White\t Not-in-family\t >50K\t Female\t Private\n53\t0\t0\t HS-grad\t9\t346253\t35\t Divorced\t United-States\t Sales\t White\t Own-child\t <=50K\t Female\t Private\n49\t0\t0\t HS-grad\t9\t268234\t40\t Married-civ-spouse\t United-States\t Protective-serv\t White\t Husband\t >50K\t Male\t Local-gov\n33\t0\t0\t Masters\t14\t202051\t50\t Married-civ-spouse\t United-States\t Prof-specialty\t White\t Husband\t <=50K\t Male\t Private\n30\t0\t0\t 9th\t5\t54334\t40\t Never-married\t United-States\t Sales\t White\t Not-in-family\t <=50K\t Male\t Private\n43\t0\t0\t Doctorate\t16\t410867\t50\t Never-married\t United-States\t Prof-specialty\t White\t Not-in-family\t >50K\t Female\t Federal-gov\n57\t0\t0\t Assoc-voc\t11\t249977\t40\t Married-civ-spouse\t United-States\t Prof-specialty\t White\t Husband\t <=50K\t Male\t Private\n37\t0\t0\t Some-college\t10\t286730\t40\t Divorced\t United-States\t Craft-repair\t White\t Unmarried\t <=50K\t Female\t Private\n28\t0\t0\t Some-college\t10\t212563\t25\t Divorced\t United-States\t Machine-op-inspct\t Black\t Unmarried\t <=50K\t Female\t Private\n30\t0\t1573\t HS-grad\t9\t117747\t35\t Married-civ-spouse\t ?\t Sales\t Asian-Pac-Islander\t Wife\t <=50K\t Female\t Private\n34\t0\t0\t Bachelors\t13\t226296\t40\t Married-civ-spouse\t United-States\t Protective-serv\t White\t Husband\t >50K\t Male\t Local-gov\n29\t0\t0\t Some-college\t10\t115585\t50\t Never-married\t United-States\t Handlers-cleaners\t White\t Not-in-family\t <=50K\t Male\t Local-gov\n48\t0\t1902\t Doctorate\t16\t191277\t60\t Married-civ-spouse\t United-States\t Prof-specialty\t White\t Husband\t >50K\t Male\t Self-emp-not-inc\n37\t0\t0\t Some-college\t10\t202683\t48\t Married-civ-spouse\t United-States\t Sales\t White\t Husband\t >50K\t Male\t Private\n48\t0\t0\t Assoc-acdm\t12\t171095\t40\t Divorced\t England\t Exec-managerial\t White\t Unmarried\t <=50K\t Female\t Private\n32\t0\t0\t HS-grad\t9\t249409\t40\t Never-married\t United-States\t Other-service\t Black\t Own-child\t <=50K\t Male\t Federal-gov\n76\t0\t0\t Masters\t14\t124191\t40\t Married-civ-spouse\t United-States\t Exec-managerial\t White\t Husband\t >50K\t Male\t Private\n"},{"type":"TEXT","data":""}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=2"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196584_-835278619","id":"20190610-134608_1458546736","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:50:03+0000","dateFinished":"2019-06-13T12:50:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:294"},{"text":"%md\nSame for csv, here, when we read json file, we will have a dataframe. We can then do some transformations (filter, order, count, etc.) as we did with csv","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Same for csv, here, when we read json file, we will have a dataframe. We can then do some transformations (filter, order, count, etc.) as we did with csv</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196585_1804934348","id":"20190610-134628_948679221","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:295"},{"text":"%md\n### Read txt in HDFS","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Read txt in HDFS</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196585_-2109093436","id":"20190610-141401_1783492523","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:296"},{"text":"val data_txt = spark.read.csv(\"hdfs://hupi-factory-02-01-01.factory02.viet.cloud-torus.com/user/factory02/formation_hupi/data.txt\")","user":"anonymous","dateUpdated":"2019-06-13T12:50:23+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"data_txt: org.apache.spark.sql.DataFrame = [_c0: string]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=3"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196585_1409215736","id":"20190610-141522_190573957","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:50:23+0000","dateFinished":"2019-06-13T12:50:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:297"},{"text":"data_txt.take(10).foreach(println)","user":"anonymous","dateUpdated":"2019-06-13T12:50:26+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[hello how are you]\n[hello how are you]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=4"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196586_1571144307","id":"20190610-141638_1426465207","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:50:26+0000","dateFinished":"2019-06-13T12:50:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:298"},{"text":"// we can also read txt file by doing (but we will have a RDD instead of a DataFrame)\nval data_txt = sc.textFile(\"hdfs://hupi-factory-02-01-01.factory02.viet.cloud-torus.com/user/factory02/formation_hupi/data.txt\")","user":"anonymous","dateUpdated":"2019-06-13T12:50:45+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"data_txt: org.apache.spark.rdd.RDD[String] = hdfs://hupi-factory-02-01-01.factory02.viet.cloud-torus.com/user/factory02/formation_hupi/data.txt MapPartitionsRDD[26] at textFile at <console>:26\n"}]},"apps":[],"jobName":"paragraph_1560422196586_-1533497909","id":"20190610-141656_157225260","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:50:45+0000","dateFinished":"2019-06-13T12:50:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:299"},{"text":"// we can count number of lines in data_txt\ndata_txt.count()","user":"anonymous","dateUpdated":"2019-06-13T12:50:49+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res4: Long = 2\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://172.17.0.2:4040/jobs/job?id=5"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1560422196586_-1434342555","id":"20190610-142653_455883504","dateCreated":"2019-06-13T10:36:36+0000","dateStarted":"2019-06-13T12:50:49+0000","dateFinished":"2019-06-13T12:50:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:300"},{"text":"%md\nHere, in data_txt, we have only 2 rows, so we can do collect() to get all the values, otherwise, it's recommended to do take(10) to get first 10 rows (because if data_txt is very big, and we try to collect and print all in notebook, it will crash) ","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Here, in data_txt, we have only 2 rows, so we can do collect() to get all the values, otherwise, it&rsquo;s recommended to do take(10) to get first 10 rows (because if data_txt is very big, and we try to collect and print all in notebook, it will crash)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196587_-1217427089","id":"20190611-080557_703910174","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:301"},{"text":"// To count number total of words in data_txt\nval number_total_words = data_txt\n        // for each row, we split by space\n        .map(l => l.split(\" \"))\n        // flatmap to flatten the rdd\n        .flatMap(line => line)\n        // here, each row will have one word\n        .count()\n\n// Print the result\nprintln(s\"Total number of words is $number_total_words\")","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Total number of words is 8\nnumber_total_words: Long = 8\n"}]},"apps":[],"jobName":"paragraph_1560422196587_-217632591","id":"20190611-080124_2014772134","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:302"},{"text":"%md\n### Read data from MongoDB\n\nWe can also read data from MongoDB. To do that, we need to include the necessary libraries ","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Read data from MongoDB</h3>\n<p>We can also read data from MongoDB. To do that, we need to include the necessary libraries</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196587_561846746","id":"20190610-143003_1193406689","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:303"},{"text":"%spark.dep\nz.load(\"/opt/hupi/JAR/mongo-java-driver-3.6.0.jar\")\nz.load(\"/opt/hupi/JAR/mongo-spark-connector_2.11-2.2.0.jar\")\nz.load(\"/opt/hupi/JAR/bson-3.4.1.jar\")","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Must be used before SparkInterpreter (%spark) initialized\nHint: put this paragraph before any Spark code and restart Zeppelin/Interpreter"}]},"apps":[],"jobName":"paragraph_1560422196588_-627533239","id":"20190611-071555_1860825969","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:304"},{"text":"import com.mongodb.spark._\r\nimport com.mongodb.spark.sql._\r\nimport com.mongodb.spark.config._\r\nimport org.bson._","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1560422196588_1559926884","id":"20190611-071742_391898810","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:305"},{"text":"// url of MongoDB\nval mongoUrl = \"mongodb://agur:et*Swaj4@mongo2.pro.hupi.loc,mongo1.pro.hupi.loc,mongo3.pro.hupi.loc\"","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1560422196588_2128830629","id":"20190611-071807_533418118","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:306"},{"text":"val read_mapping = ReadConfig(Map(\"uri\" -> s\"$mongoUrl/$customer.indicator_results\", \"format\" -> \"com.mongodb.spark.sql\"))\r\n// On cherche les données dans MongoDB \r\nval data = MongoSpark.load(spark, read_mapping).\r\n    // on ne filtre que des indicateurs actifs\r\n    filter($\"active\" === true)\r\n    \r\n// creer table temporaire\r\ndata.createOrReplaceTempView(\"data\")","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1560422196588_1686745297","id":"20190611-072250_765464436","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:307"},{"text":"%md\n# Transform Data\n\nWhen we read data, normally, we will have DataFrame. \n\nIn Spark, we have normally 3 big types of data :\n- RDD\n- DataFrame\n- Dataset\n\nWhat's differences between these 3 : https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-dataset-rdd.html\n\nThere is also 2 notions : transformations or actions. In Spark, when we do Transformations (filter, map, flatMap, etc.), it's \"lazy\", it doesn't execute and compute the results. But when we do Actions (collect, take, etc.), Spark have to compute to show us the results.\n\nIn spark 2.0, we see mostly DataFrame or Dataset. RDD is usually used with Spark < 2.0. \n\nWith RDD - Resilient Distributed Dataset, the basic abstraction in Spark. We can do map, filter and cache a RDD. \nWhen we have DataFrame, we can filter, add column, create UDF (user defined function) to transform data as we want, add window function (for complicated computation)...\nFrom Spark 2.0, we have new format of data that is a combination of RDD and DataFrame, it's Dataset. In fact, Dataset has schema like DataFrame and we are able to execute RDD's transformations in Dataset.\n\n***Reference links*** :\n\nFor RDD :\nhttps://spark.apache.org/docs/1.6.0/api/java/org/apache/spark/rdd/RDD.html\nhttps://jaceklaskowski.gitbooks.io/mastering-apache-spark/spark-rdd-transformations.html\n\nFor DataFrame :\nhttps://spark.apache.org/docs/2.1.1/sql-programming-guide.html\nhttps://medium.com/@mrpowers/spark-user-defined-functions-udfs-6c849e39443b\nhttps://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-functions-windows.html\nhttps://databricks.com/blog/2015/07/15/introducing-window-functions-in-spark-sql.html\n\nFor Dataset :\nhttps://docs.databricks.com/spark/latest/dataframes-datasets/introduction-to-datasets.html\nhttps://medium.com/@trung.ngvan/data-transformation-scala-collections-and-sql-9984a1d8dfa0\n\n### Transformations in RDD\n\nWe use same example data_txt and do some transformations","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Transform Data</h1>\n<p>When we read data, normally, we will have DataFrame. </p>\n<p>In Spark, we have normally 3 big types of data :<br/>- RDD<br/>- DataFrame<br/>- Dataset</p>\n<p>What&rsquo;s differences between these 3 : <a href=\"https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-dataset-rdd.html\">https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-dataset-rdd.html</a></p>\n<p>There is also 2 notions : transformations or actions. In Spark, when we do Transformations (filter, map, flatMap, etc.), it&rsquo;s &ldquo;lazy&rdquo;, it doesn&rsquo;t execute and compute the results. But when we do Actions (collect, take, etc.), Spark have to compute to show us the results.</p>\n<p>In spark 2.0, we see mostly DataFrame or Dataset. RDD is usually used with Spark &lt; 2.0. </p>\n<p>With RDD - Resilient Distributed Dataset, the basic abstraction in Spark. We can do map, filter and cache a RDD.<br/>When we have DataFrame, we can filter, add column, create UDF (user defined function) to transform data as we want, add window function (for complicated computation)&hellip;<br/>From Spark 2.0, we have new format of data that is a combination of RDD and DataFrame, it&rsquo;s Dataset. In fact, Dataset has schema like DataFrame and we are able to execute RDD&rsquo;s transformations in Dataset.</p>\n<p><strong><em>Reference links</em></strong> :</p>\n<p>For RDD :<br/><a href=\"https://spark.apache.org/docs/1.6.0/api/java/org/apache/spark/rdd/RDD.html\">https://spark.apache.org/docs/1.6.0/api/java/org/apache/spark/rdd/RDD.html</a><br/><a href=\"https://jaceklaskowski.gitbooks.io/mastering-apache-spark/spark-rdd-transformations.html\">https://jaceklaskowski.gitbooks.io/mastering-apache-spark/spark-rdd-transformations.html</a></p>\n<p>For DataFrame :<br/><a href=\"https://spark.apache.org/docs/2.1.1/sql-programming-guide.html\">https://spark.apache.org/docs/2.1.1/sql-programming-guide.html</a><br/><a href=\"https://medium.com/@mrpowers/spark-user-defined-functions-udfs-6c849e39443b\">https://medium.com/@mrpowers/spark-user-defined-functions-udfs-6c849e39443b</a><br/><a href=\"https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-functions-windows.html\">https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-functions-windows.html</a><br/><a href=\"https://databricks.com/blog/2015/07/15/introducing-window-functions-in-spark-sql.html\">https://databricks.com/blog/2015/07/15/introducing-window-functions-in-spark-sql.html</a></p>\n<p>For Dataset :<br/><a href=\"https://docs.databricks.com/spark/latest/dataframes-datasets/introduction-to-datasets.html\">https://docs.databricks.com/spark/latest/dataframes-datasets/introduction-to-datasets.html</a><br/><a href=\"https://medium.com/@trung.ngvan/data-transformation-scala-collections-and-sql-9984a1d8dfa0\">https://medium.com/@trung.ngvan/data-transformation-scala-collections-and-sql-9984a1d8dfa0</a></p>\n<h3>Transformations in RDD</h3>\n<p>We use same example data_txt and do some transformations</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196589_-893818170","id":"20190611-081752_625476664","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:308"},{"text":"// To get only total number of dictint words in data_txt\nval total_number_distinct_words = data_txt\n                // split by space for each row\n                .map(l => l.split(\" \"))\n                // here, for each row, we'll have an array of words splitted by space. To avoid white space, we need to filter inside the array\n                .map(l => l.filter(s => s != \" \" || s != \"\"))\n                // flatten all rows\n                .flatMap(l => l)\n                // get distinct words\n                .distinct\n                // count words\n                .count()\n                \nprintln(s\"Total number of distinct words is $total_number_distinct_words\")\n                ","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Total number of distinct words is 4\ntotal_number_distinct_words: Long = 4\n"}]},"apps":[],"jobName":"paragraph_1560422196589_928288952","id":"20190611-072827_855134934","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:309"},{"text":"// To add 2 columns : one column is array of words, one column indicating number of words for each row\nval data_txt_modified = data_txt\n                // split by space for each row\n                .map(l => (l, l.split(\" \")))\n                .map(l => (l._1, l._2.filter(s => s != \" \" || s != \"\")))\n                // for each row, add another column by using map\n                .map(l => (l._1, l._2, l._2.length))\n                \ndata_txt_modified.take(10)","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"data_txt_modified: org.apache.spark.rdd.RDD[(String, Array[String], Int)] = MapPartitionsRDD[119] at map at <console>:35\nres28: Array[(String, Array[String], Int)] = Array((hello how are you,Array(hello, how, are, you),4), (hello how are you,Array(hello, how, are, you),4))\n"}]},"apps":[],"jobName":"paragraph_1560422196589_-920445042","id":"20190611-090024_1483283637","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:310"},{"text":"%md\n***Join 2 RDDs***\n\nTo join RDD, it always understands first column (which can contains many sub-columns) as key and second column (which can contains many sub-columns) as value. And if we have many keys, the order of keys is very important too!\n\nFor example to join 2 RDD by 2 keys. Before we do join, we need to prepare :\n- RDD1 = RDD[(key_1, key_2), (value_1a, value_2a, ..., value_na)]\n- RDD2 = RDD[(key_1, key_2), (value_1b, value_2b, ..., value_nb)]","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Join 2 RDDs</em></strong></p>\n<p>To join RDD, it always understands first column (which can contains many sub-columns) as key and second column (which can contains many sub-columns) as value. And if we have many keys, the order of keys is very important too!</p>\n<p>For example to join 2 RDD by 2 keys. Before we do join, we need to prepare :<br/>- RDD1 = RDD[(key_1, key_2), (value_1a, value_2a, &hellip;, value_na)]<br/>- RDD2 = RDD[(key_1, key_2), (value_1b, value_2b, &hellip;, value_nb)]</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196589_1570818993","id":"20190613-081905_1451085975","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:311"},{"text":"// Because our RDD data_txt has only one column, so here, we will try to create 2 RDDs from data_csv and join it by 2 keys\n// To put it 2 keys in a column, we can just put it inside \"()\"\nval rdd1 = data_csv.map(l => ((l(0).asInstanceOf[String], l(1).asInstanceOf[String]), l(2).asInstanceOf[String])).rdd\nval rdd2 = data_csv.map(l => ((l(0).asInstanceOf[String], l(1).asInstanceOf[String]), l(3).asInstanceOf[String])).rdd\n\nval rdd_joined = rdd1.join(rdd2)","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rdd1: org.apache.spark.rdd.RDD[((String, String), String)] = MapPartitionsRDD[285] at rdd at <console>:30\nrdd2: org.apache.spark.rdd.RDD[((String, String), String)] = MapPartitionsRDD[290] at rdd at <console>:31\nrdd_joined: org.apache.spark.rdd.RDD[((String, String), (String, String))] = MapPartitionsRDD[293] at join at <console>:33\n"}]},"apps":[],"jobName":"paragraph_1560422196590_2141667748","id":"20190613-081853_1600811414","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:312"},{"text":"// we print 2 first columns\nrdd_joined.take(2).foreach(println)","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"((49, Private),( 160187, 9th))\n((49, Private),( 160187, HS-grad))\n"}]},"apps":[],"jobName":"paragraph_1560422196590_-1341034570","id":"20190613-083852_1799483553","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:313"},{"text":"%md\n### Transformations in DataFrame\n\nWe saw already how to do filter in DataFrame, below we will see how to create and apply an UDF in DataFrame, also how to use Window function.\n\n***Using UDF function***\n\nFor example, we want to classify people by age, like if we have age < 30 : inexperienced and if >= 30 : experienced (just an example, no need to be defended ^^ )  \n\nTo do that, we need to create a function in Scala, then transform this function in UDF (to be able to apply to DataFrame).\n\nNext, we create new column with `withColumn(*name_new_column*, *function_to_get_values_for_new_column*)`, otherwise in **function_to_get_values_for_new_column**, the arguments have to be names of columns existed already in DataFrame.","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Transformations in DataFrame</h3>\n<p>We saw already how to do filter in DataFrame, below we will see how to create and apply an UDF in DataFrame, also how to use Window function.</p>\n<p><strong><em>Using UDF function</em></strong></p>\n<p>For example, we want to classify people by age, like if we have age &lt; 30 : inexperienced and if &gt;= 30 : experienced (just an example, no need to be defended ^^ ) </p>\n<p>To do that, we need to create a function in Scala, then transform this function in UDF (to be able to apply to DataFrame).</p>\n<p>Next, we create new column with <code>withColumn(*name_new_column*, *function_to_get_values_for_new_column*)</code>, otherwise in <strong>function_to_get_values_for_new_column</strong>, the arguments have to be names of columns existed already in DataFrame.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196590_1602922752","id":"20190611-091422_597779141","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:314"},{"text":"// create function classifyByAge in Scala that has age as input (in String, because in Dataframe data_csv, we have age in String)\ndef classifyByAge (input: String) : String = {\n    // we need to convert input to number\n    val age = input.toInt\n    val result = if (age < 30) {\n        \"inexperienced\"\n    } else {\n        \"experienced\"\n    }\n    return result\n}\n\n// create an UDF. Attention : inside udf, we need to put [*type of output*, *all types of input*]\nval classifyByAgeUDF = udf[String, String](classifyByAge)\n\n// apply this function to data_csv \nval data_csv_modified = data_csv\n        // we use withColumn to create new column\n        .withColumn(\"class_by_age\", classifyByAgeUDF($\"age\"))\n        \n// we show data_csv_modified that has now one more column : class_by_age\nz.show(data_csv_modified.select(\"age\", \"class_by_age\"))","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","class_by_age":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tclass_by_age\n39\texperienced\n50\texperienced\n38\texperienced\n53\texperienced\n28\tinexperienced\n37\texperienced\n49\texperienced\n52\texperienced\n31\texperienced\n42\texperienced\n37\texperienced\n30\texperienced\n23\tinexperienced\n32\texperienced\n40\texperienced\n34\texperienced\n25\tinexperienced\n32\texperienced\n38\texperienced\n43\texperienced\n40\texperienced\n54\texperienced\n35\texperienced\n43\texperienced\n59\texperienced\n56\texperienced\n19\tinexperienced\n54\texperienced\n39\texperienced\n49\texperienced\n23\tinexperienced\n20\tinexperienced\n45\texperienced\n30\texperienced\n22\tinexperienced\n48\texperienced\n21\tinexperienced\n19\tinexperienced\n31\texperienced\n48\texperienced\n31\texperienced\n53\texperienced\n24\tinexperienced\n49\texperienced\n25\tinexperienced\n57\texperienced\n53\texperienced\n44\texperienced\n41\texperienced\n29\tinexperienced\n25\tinexperienced\n18\tinexperienced\n47\texperienced\n50\texperienced\n47\texperienced\n43\texperienced\n46\texperienced\n35\texperienced\n41\texperienced\n30\texperienced\n30\texperienced\n32\texperienced\n48\texperienced\n42\texperienced\n29\tinexperienced\n36\texperienced\n28\tinexperienced\n53\texperienced\n49\texperienced\n25\tinexperienced\n19\tinexperienced\n31\texperienced\n29\tinexperienced\n23\tinexperienced\n79\texperienced\n27\tinexperienced\n40\texperienced\n67\texperienced\n18\tinexperienced\n31\texperienced\n18\tinexperienced\n52\texperienced\n46\texperienced\n59\texperienced\n44\texperienced\n53\texperienced\n49\texperienced\n33\texperienced\n30\texperienced\n43\texperienced\n57\texperienced\n37\texperienced\n28\tinexperienced\n30\texperienced\n34\texperienced\n29\tinexperienced\n48\texperienced\n37\texperienced\n48\texperienced\n32\texperienced\n76\texperienced\n"},{"type":"TEXT","data":"classifyByAge: (input: String)String\nclassifyByAgeUDF: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,Some(List(StringType)))\ndata_csv_modified: org.apache.spark.sql.DataFrame = [age: string, workclass: string ... 14 more fields]\n"}]},"apps":[],"jobName":"paragraph_1560422196590_918206005","id":"20190611-093544_1656419689","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:315"},{"text":"%md\n***Using Window aggregate function***\n\n\"Window aggregate functions (aka window functions or windowed aggregates) are functions that perform a calculation over a group of records called window that are in some relation to the current record (i.e. can be in the same partition or frame as the current row).\n\nIn other words, when executed, a window function computes a value for each and every row in a window (per window specification).\n\nSpark SQL supports three kinds of window functions:\n\n- ranking functions\n- analytic functions\n- aggregate functions\" (src : https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-functions-windows.html)\n\nFor example, here, we want to find max age for each workclass","user":"anonymous","dateUpdated":"2019-06-17T17:00:00+0000","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Using Window aggregate function</em></strong></p>\n<p>&quot;Window aggregate functions (aka window functions or windowed aggregates) are functions that perform a calculation over a group of records called window that are in some relation to the current record (i.e. can be in the same partition or frame as the current row).</p>\n<p>In other words, when executed, a window function computes a value for each and every row in a window (per window specification).</p>\n<p>Spark SQL supports three kinds of window functions:</p>\n<ul>\n  <li>ranking functions</li>\n  <li>analytic functions</li>\n  <li>aggregate functions&quot; (src : <a href=\"https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-functions-windows.html\">https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-functions-windows.html</a>)</li>\n</ul>\n<p>For example, here, we want to find max age for each workclass</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196591_511007143","id":"20190611-091737_1783464900","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:316"},{"text":"import org.apache.spark.sql.expressions.Window","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.expressions.Window\n"}]},"apps":[],"jobName":"paragraph_1560422196591_-127719777","id":"20190611-093200_1109447738","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:317"},{"text":"val byWorkclassAgeDesc = Window.partitionBy($\"workclass\").orderBy($\"age\".desc)\r\n\r\n// a numerical rank within the current row's partition for each distinct ORDER BY value\r\nval rankByWorkclass = rank().over(byWorkclassAgeDesc)\r\n\r\n// We add this rank in data_csv\r\nval data_csv_with_window = data_csv.select(col(\"*\"), rankByWorkclass as \"rank\")\r\n\r\n// show dataframe (we show only 3 columns : age, workclass and rank)\r\nz.show(data_csv_with_window.select(\"age\", \"workclass\", \"rank\"))","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","workclass":"string","rank":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tworkclass\trank\n41\t State-gov\t1\n39\t State-gov\t2\n30\t State-gov\t3\n22\t State-gov\t4\n57\t Federal-gov\t1\n50\t Federal-gov\t2\n43\t Federal-gov\t3\n35\t Federal-gov\t4\n32\t Federal-gov\t5\n30\t Federal-gov\t6\n53\t Self-emp-not-inc\t1\n52\t Self-emp-not-inc\t2\n50\t Self-emp-not-inc\t3\n48\t Self-emp-not-inc\t4\n48\t Self-emp-not-inc\t4\n43\t Self-emp-not-inc\t6\n29\t Self-emp-not-inc\t7\n25\t Self-emp-not-inc\t8\n56\t Local-gov\t1\n49\t Local-gov\t2\n34\t Local-gov\t3\n31\t Local-gov\t4\n29\t Local-gov\t5\n23\t Local-gov\t6\n79\t Private\t1\n76\t Private\t2\n59\t Private\t3\n59\t Private\t3\n57\t Private\t5\n54\t Private\t6\n53\t Private\t7\n53\t Private\t7\n53\t Private\t7\n53\t Private\t7\n52\t Private\t11\n49\t Private\t12\n49\t Private\t12\n49\t Private\t12\n48\t Private\t15\n48\t Private\t15\n48\t Private\t15\n47\t Private\t18\n46\t Private\t19\n46\t Private\t19\n45\t Private\t21\n44\t Private\t22\n44\t Private\t22\n43\t Private\t24\n43\t Private\t24\n42\t Private\t26\n42\t Private\t26\n41\t Private\t28\n40\t Private\t29\n40\t Private\t29\n40\t Private\t29\n39\t Private\t32\n38\t Private\t33\n38\t Private\t33\n37\t Private\t35\n37\t Private\t35\n37\t Private\t35\n37\t Private\t35\n36\t Private\t39\n35\t Private\t40\n34\t Private\t41\n33\t Private\t42\n32\t Private\t43\n32\t Private\t43\n31\t Private\t45\n31\t Private\t45\n31\t Private\t45\n31\t Private\t45\n30\t Private\t49\n30\t Private\t49\n30\t Private\t49\n30\t Private\t49\n29\t Private\t53\n29\t Private\t53\n28\t Private\t55\n28\t Private\t55\n28\t Private\t55\n27\t Private\t58\n25\t Private\t59\n25\t Private\t59\n24\t Private\t61\n23\t Private\t62\n23\t Private\t62\n21\t Private\t64\n20\t Private\t65\n19\t Private\t66\n19\t Private\t66\n19\t Private\t66\n18\t Private\t69\n18\t Private\t69\n18\t Private\t69\n67\t ?\t1\n54\t ?\t2\n32\t ?\t3\n25\t ?\t4\n49\t Self-emp-inc\t1\n47\t Self-emp-inc\t2\n"},{"type":"TEXT","data":"byWorkclassAgeDesc: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@321d5388\nrankByWorkclass: org.apache.spark.sql.Column = RANK() OVER (PARTITION BY workclass ORDER BY age DESC NULLS LAST UnspecifiedFrame)\ndata_csv_with_window: org.apache.spark.sql.DataFrame = [age: string, workclass: string ... 14 more fields]\n"}]},"apps":[],"jobName":"paragraph_1560422196591_1833852384","id":"20190611-100910_218775600","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:318"},{"text":"// So now we can just filter rank = 1 to have only row containing max age by workclass\nval max_age_by_workclass = data_csv_with_window.filter($\"rank\" === 1)\n                            // drop column rank\n                            .drop($\"rank\")\n\n// show data \nz.show(max_age_by_workclass.select(\"age\", \"workclass\"))","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","workclass":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tworkclass\n41\t State-gov\n57\t Federal-gov\n53\t Self-emp-not-inc\n56\t Local-gov\n79\t Private\n67\t ?\n49\t Self-emp-inc\n"},{"type":"TEXT","data":"max_age_by_workclass: org.apache.spark.sql.DataFrame = [age: string, workclass: string ... 13 more fields]\n"}]},"apps":[],"jobName":"paragraph_1560422196592_-1448131478","id":"20190611-101324_1664045558","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:319"},{"text":"%md\n***Join DataFrames***\n\nhttps://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-joins.html","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><strong><em>Join DataFrames</em></strong></p>\n<p><a href=\"https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-joins.html\">https://jaceklaskowski.gitbooks.io/mastering-spark-sql/spark-sql-joins.html</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196592_-1622442322","id":"20190611-125553_272185587","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:320"},{"text":"// For example, if we want to join 2 dataframes data_csv and max_age_by_workclass by age and workclass \nval dataframe_joined = data_csv.join(max_age_by_workclass, Seq(\"age\", \"workclass\"))\n\nz.show(dataframe_joined)","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","workclass":"string","fnlwgt":"string","education":"string","education_num":"string","martial_status":"string","occupation":"string","relationship":"string","race":"string","sex":"string","capital_gain":"string","capital_loss":"string","hours_per_week":"string","native_country":"string","salary":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"age\tworkclass\tfnlwgt\teducation\teducation_num\tmartial_status\toccupation\trelationship\trace\tsex\tcapital_gain\tcapital_loss\thours_per_week\tnative_country\tsalary\tfnlwgt\teducation\teducation_num\tmartial_status\toccupation\trelationship\trace\tsex\tcapital_gain\tcapital_loss\thours_per_week\tnative_country\tsalary\n56\t Local-gov\t 216851\t Bachelors\t 13\t Married-civ-spouse\t Tech-support\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\t 216851\t Bachelors\t 13\t Married-civ-spouse\t Tech-support\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t >50K\n53\t Self-emp-not-inc\t 88506\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\t 88506\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n57\t Federal-gov\t 337895\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t Black\t Male\t 0\t 0\t 40\t United-States\t >50K\t 337895\t Bachelors\t 13\t Married-civ-spouse\t Prof-specialty\t Husband\t Black\t Male\t 0\t 0\t 40\t United-States\t >50K\n41\t State-gov\t 101603\t Assoc-voc\t 11\t Married-civ-spouse\t Craft-repair\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\t 101603\t Assoc-voc\t 11\t Married-civ-spouse\t Craft-repair\t Husband\t White\t Male\t 0\t 0\t 40\t United-States\t <=50K\n49\t Self-emp-inc\t 191681\t Some-college\t 10\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t >50K\t 191681\t Some-college\t 10\t Married-civ-spouse\t Exec-managerial\t Husband\t White\t Male\t 0\t 0\t 50\t United-States\t >50K\n79\t Private\t 124744\t Some-college\t 10\t Married-civ-spouse\t Prof-specialty\t Other-relative\t White\t Male\t 0\t 0\t 20\t United-States\t <=50K\t 124744\t Some-college\t 10\t Married-civ-spouse\t Prof-specialty\t Other-relative\t White\t Male\t 0\t 0\t 20\t United-States\t <=50K\n67\t ?\t 212759\t 10th\t 6\t Married-civ-spouse\t ?\t Husband\t White\t Male\t 0\t 0\t 2\t United-States\t <=50K\t 212759\t 10th\t 6\t Married-civ-spouse\t ?\t Husband\t White\t Male\t 0\t 0\t 2\t United-States\t <=50K\n"},{"type":"TEXT","data":"dataframe_joined: org.apache.spark.sql.DataFrame = [age: string, workclass: string ... 26 more fields]\n"}]},"apps":[],"jobName":"paragraph_1560422196592_-1555594244","id":"20190613-080934_1269251428","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:321"},{"text":"%md\n### Conversion between RDD, DataFrame and Dataset\n\n##### RDD & DataFrame","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Conversion between RDD, DataFrame and Dataset</h3>\n<h5>RDD &amp; DataFrame</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196592_-424967934","id":"20190611-101628_1018599081","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:322"},{"text":"// To convert a RDD to Dataframe\nval data_txt_df = data_txt.toDF(\"column1\")\n\nz.show(data_txt_df)","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"column1":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"column1\nhello how are you\nhello how are you\n"},{"type":"TEXT","data":"data_txt_df: org.apache.spark.sql.DataFrame = [column1: string]\n"}]},"apps":[],"jobName":"paragraph_1560422196593_-1594398755","id":"20190611-101900_1766467257","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:323"},{"text":"// We convert it back to RDD : to do that, we need to know types of each column \nval rdd_data_txt = data_txt_df.map(l => l.asInstanceOf[String]).rdd\n\n// Other way to do the conversion\nval rdd_data_txt1 = data_txt_df.map(l => l.getAs[String](0)).rdd\n","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rdd_data_txt: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[180] at rdd at <console>:31\nrdd_data_txt1: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[185] at rdd at <console>:34\n"}]},"apps":[],"jobName":"paragraph_1560422196593_744507028","id":"20190611-102102_377549691","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:324"},{"text":"%md\n#####  DataFrame & Dataset","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h5>DataFrame &amp; Dataset</h5>\n</div>"}]},"apps":[],"jobName":"paragraph_1560422196593_1525097736","id":"20190611-102510_716467127","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:325"},{"text":"// To convert dataframe to dataset. For example, we select only 2 first columns in data_csv. Like conversion to RDD, we need to know types of each column too.\nval data_txt_ds = data_csv.map(l => (l(0).asInstanceOf[String], l(1).asInstanceOf[String]))\n\n// or\nval data_txt_ds1 = data_csv.map(l => (l.getAs[String](0), l.getAs[String](1)))","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"data_txt_ds: org.apache.spark.sql.Dataset[(String, String)] = [_1: string, _2: string]\ndata_txt_ds1: org.apache.spark.sql.Dataset[(String, String)] = [_1: string, _2: string]\n"}]},"apps":[],"jobName":"paragraph_1560422196594_1466203537","id":"20190611-102801_902450126","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:326"},{"text":"","user":"anonymous","dateUpdated":"2019-06-13T10:36:36+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1560422196594_-764150926","id":"20190611-102923_1462995011","dateCreated":"2019-06-13T10:36:36+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:327"}],"name":"MONTUS/Formation - 1 Reading & transforming data","id":"2EE9VYZXG","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}